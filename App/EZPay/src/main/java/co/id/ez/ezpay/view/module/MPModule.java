/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.id.ez.ezpay.view.module;

import co.id.ez.database.query.QueryBuilder;
import co.id.ez.database.query.QueryType;
import co.id.ez.ezpay.util.swings.PopupMenu;
import java.awt.event.KeyEvent;
import co.id.ez.ezpay.abstracts.AbstractModule;
import co.id.ez.ezpay.app.App;
import co.id.ez.ezpay.app.Common;
import co.id.ez.ezpay.enums.util.Icons;
import co.id.ez.ezpay.enums.MessageType;
import co.id.ez.ezpay.model.data.DataSearch;
import co.id.ez.ezpay.model.data.detail.Field;
import co.id.ez.ezpay.model.data.search.MultiPaymentBiller;
import co.id.ez.ezpay.msg.mp.MPInquiry;
import co.id.ez.ezpay.msg.mp.MPPayment;
import co.id.ez.system.core.rc.RC;
import com.json.JSONArray;
import com.json.JSONException;
import com.json.JSONObject;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.LinkedList;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author Lutfi
 */
public class MPModule extends AbstractModule {

    private DataSearch<MultiPaymentBiller> dataHolderList;
    private MultiPaymentBiller biller;
    private ForminputMPModule inputForm;
    private final LinkedList<JLabel> detailLabelList = new LinkedList<>();
    private final LinkedList<JTextField> detailFieldList = new LinkedList<>();

    /**
     * Creates new form PLNPrepaidModule
     */
    public MPModule() {
        initComponents();
        initForm();
        initListener();
    }

    @Override
    public final void initForm() {
        Common.setOpaqueComponent(false, jPanel1, jPanel2, jPanel3, jPanel4, panelbayar, paneldetail, panelinput);
        btn_batal.setIcon(Icons.LARGE_CANCEL.get());
        btn_bayar.setIcon(Icons.LARGE_PAY.get());
        btn_refresh.setIcon(Icons.SMALL_RELOAD.get());
        popupMenu = new PopupMenu(txt_biller, false);
        dataHolderList = new DataSearch();
        addComponentDetail(label_detail_1, label_detail_2, label_detail_3, label_detail_4, 
                label_detail_5, label_detail_6, label_detail_7, label_detail_8, 
                label_detail_9 , label_detail_10);
        addComponentDetail(txt_detail_1, txt_detail_2, txt_detail_3, txt_detail_4,
                txt_detail_5, txt_detail_6, txt_detail_7, txt_detail_8,
                txt_detail_9, txt_detail_10);
        Common.activateComponent(false, txt_admin_charge, txt_tagihan, txt_total_tagihan, 
                txt_detail_1, txt_detail_2, txt_detail_3, txt_detail_4,
                txt_detail_5, txt_detail_6, txt_detail_7, txt_detail_8,
                txt_detail_9, txt_detail_10);
        resetForm();
        loadData();
        initListener();
    }
    
    private void addComponentDetail(Component... componen){
        
        for (Component component : componen) {
            if(component instanceof JLabel){
                detailLabelList.add((JLabel) component);
            }
            
            if(component instanceof JTextField){
                detailFieldList.add((JTextField) component);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        panelbayar = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txt_tagihan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_admin_charge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_total_tagihan = new javax.swing.JTextField();
        btn_bayar = new javax.swing.JButton();
        btn_batal = new javax.swing.JButton();
        paneldetail = new javax.swing.JPanel();
        label_detail_1 = new javax.swing.JLabel();
        txt_detail_1 = new javax.swing.JTextField();
        label_detail_3 = new javax.swing.JLabel();
        txt_detail_3 = new javax.swing.JTextField();
        txt_detail_2 = new javax.swing.JTextField();
        label_detail_2 = new javax.swing.JLabel();
        label_detail_4 = new javax.swing.JLabel();
        txt_detail_4 = new javax.swing.JTextField();
        label_detail_5 = new javax.swing.JLabel();
        txt_detail_5 = new javax.swing.JTextField();
        label_detail_6 = new javax.swing.JLabel();
        txt_detail_6 = new javax.swing.JTextField();
        label_detail_7 = new javax.swing.JLabel();
        txt_detail_7 = new javax.swing.JTextField();
        label_detail_8 = new javax.swing.JLabel();
        txt_detail_8 = new javax.swing.JTextField();
        label_detail_9 = new javax.swing.JLabel();
        txt_detail_9 = new javax.swing.JTextField();
        label_detail_10 = new javax.swing.JLabel();
        txt_detail_10 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_biller = new javax.swing.JTextField();
        btn_refresh = new javax.swing.JButton();
        panelinput = new javax.swing.JPanel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new java.awt.CardLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        panelbayar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detail Tagihan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tagihan");

        txt_tagihan.setEditable(false);
        txt_tagihan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_tagihan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Admin Charge");

        txt_admin_charge.setEditable(false);
        txt_admin_charge.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_admin_charge.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Total Tagihan");

        txt_total_tagihan.setEditable(false);
        txt_total_tagihan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_total_tagihan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        btn_bayar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btn_bayar.setText("Bayar");
        btn_bayar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_bayar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_bayar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_bayar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bayarActionPerformed(evt);
            }
        });

        btn_batal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btn_batal.setText("Batal");
        btn_batal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_batal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_batal.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_batal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelbayarLayout = new javax.swing.GroupLayout(panelbayar);
        panelbayar.setLayout(panelbayarLayout);
        panelbayarLayout.setHorizontalGroup(
            panelbayarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelbayarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelbayarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelbayarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelbayarLayout.createSequentialGroup()
                        .addComponent(btn_bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_batal, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_tagihan, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_admin_charge, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_total_tagihan, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        panelbayarLayout.setVerticalGroup(
            panelbayarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelbayarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelbayarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_tagihan, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelbayarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_admin_charge, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelbayarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_total_tagihan, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelbayarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_bayar)
                    .addComponent(btn_batal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(panelbayar, java.awt.BorderLayout.PAGE_END);

        paneldetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detail info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        label_detail_1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_1.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_1.setText("Label1");

        txt_detail_1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label_detail_3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_3.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_3.setText("Label3");

        txt_detail_3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txt_detail_2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label_detail_2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_2.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_2.setText("Label2");

        label_detail_4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_4.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_4.setText("Label3");

        txt_detail_4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label_detail_5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_5.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_5.setText("Label3");

        txt_detail_5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label_detail_6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_6.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_6.setText("Label3");

        txt_detail_6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label_detail_7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_7.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_7.setText("Label3");

        txt_detail_7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label_detail_8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_8.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_8.setText("Label3");

        txt_detail_8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label_detail_9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_9.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_9.setText("Label3");

        txt_detail_9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        label_detail_10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_detail_10.setForeground(new java.awt.Color(255, 255, 255));
        label_detail_10.setText("Label3");

        txt_detail_10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout paneldetailLayout = new javax.swing.GroupLayout(paneldetail);
        paneldetail.setLayout(paneldetailLayout);
        paneldetailLayout.setHorizontalGroup(
            paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneldetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_5, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_6, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_7, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_8, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_9, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneldetailLayout.createSequentialGroup()
                        .addComponent(label_detail_10, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_detail_10, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        paneldetailLayout.setVerticalGroup(
            paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneldetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneldetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_detail_10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_detail_10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(paneldetail, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pilih Biller", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Biller");

        txt_biller.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txt_biller.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_billerMouseClicked(evt);
            }
        });
        txt_biller.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_billerKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_billerKeyReleased(evt);
            }
        });

        btn_refresh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_biller, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_biller, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        panelinput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Input", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        panelinput.setLayout(new java.awt.CardLayout());
        jPanel4.add(panelinput, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );

        add(jPanel2, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void txt_billerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_billerKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() != KeyEvent.VK_UP
                && evt.getKeyCode() != KeyEvent.VK_DOWN
                && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            search();
        }
    }//GEN-LAST:event_txt_billerKeyReleased

    private void txt_billerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_billerMouseClicked
        // TODO add your handling code here:
        if(!panelinput.isVisible()){
            search();
        }
    }//GEN-LAST:event_txt_billerMouseClicked

    private void txt_billerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_billerKeyPressed
        // TODO add your handling code here:
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_UP:
                popupMenu.beforeSelection();
                break;
            case KeyEvent.VK_DOWN:
                popupMenu.afterSelection();
                break;
            case KeyEvent.VK_BACK_SPACE:
                search();
                break;
            case KeyEvent.VK_ENTER:
                biller = (MultiPaymentBiller) popupMenu.setSelectedValue();
                loadBillerForm();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_txt_billerKeyPressed

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
        // TODO add your handling code here:
        int opt = Common.showConfirmMessage("Batalkan Transaksi ?", this);
        if(opt == 0){
            resetForm();
        }
    }//GEN-LAST:event_btn_batalActionPerformed

    private void btn_bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bayarActionPerformed
        // TODO add your handling code here:
        if (billerResponse != null) {
            int opt = Common.showConfirmMessage("Anda ingin melakukan pembayaran \n" 
                    + biller.getInfo() + " Sejumlah "+ txt_total_tagihan.getText() + " ?", this);
            if (opt == 0) {
                performPayment();
            }
        } else {
            Common.showWarningMessage("Data transaksi belum valid, silahkan ulangi transaksi!", this);
            resetForm();
        }
    }//GEN-LAST:event_btn_bayarActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        // TODO add your handling code here:
        int opt = Common.showConfirmMessage("Reload data biller ?", this);
        if (opt == 0) {
            resetForm();
            loadData();
            Common.showInfoMessage("Reload data berhasil", this);
        }
        
    }//GEN-LAST:event_btn_refreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_batal;
    private javax.swing.JButton btn_bayar;
    private javax.swing.JButton btn_refresh;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel label_detail_1;
    private javax.swing.JLabel label_detail_10;
    private javax.swing.JLabel label_detail_2;
    private javax.swing.JLabel label_detail_3;
    private javax.swing.JLabel label_detail_4;
    private javax.swing.JLabel label_detail_5;
    private javax.swing.JLabel label_detail_6;
    private javax.swing.JLabel label_detail_7;
    private javax.swing.JLabel label_detail_8;
    private javax.swing.JLabel label_detail_9;
    private javax.swing.JPanel panelbayar;
    private javax.swing.JPanel paneldetail;
    private javax.swing.JPanel panelinput;
    private javax.swing.JTextField txt_admin_charge;
    private javax.swing.JTextField txt_biller;
    private javax.swing.JTextField txt_detail_1;
    private javax.swing.JTextField txt_detail_10;
    private javax.swing.JTextField txt_detail_2;
    private javax.swing.JTextField txt_detail_3;
    private javax.swing.JTextField txt_detail_4;
    private javax.swing.JTextField txt_detail_5;
    private javax.swing.JTextField txt_detail_6;
    private javax.swing.JTextField txt_detail_7;
    private javax.swing.JTextField txt_detail_8;
    private javax.swing.JTextField txt_detail_9;
    private javax.swing.JTextField txt_tagihan;
    private javax.swing.JTextField txt_total_tagihan;
    // End of variables declaration//GEN-END:variables

    @Override
    public final void resetForm() {
        Common.clearText(txt_admin_charge, txt_total_tagihan, txt_tagihan,
                txt_detail_1, txt_detail_2, txt_detail_3, txt_detail_4,
                txt_detail_5, txt_detail_6, txt_detail_7, txt_detail_8,
                txt_detail_9, txt_detail_10);
        Common.activateComponent(false, btn_bayar, btn_batal);
        Common.activateComponent(true, btn_refresh, txt_biller, btn_refresh);
        biller = null; 
        billerResponse = null;
        txt_biller.requestFocus();
        Common.setVisibility(false, panelinput, panelbayar, paneldetail, 
                txt_detail_1, txt_detail_2, txt_detail_3, txt_detail_4,
                txt_detail_5, txt_detail_6, txt_detail_7, txt_detail_8,
                txt_detail_9, txt_detail_10, label_detail_1, label_detail_2, label_detail_3, label_detail_4, 
                label_detail_5, label_detail_6, label_detail_7, label_detail_8, 
                label_detail_9 , label_detail_10);
        inputForm = null;
    }

    @Override
    public final void initListener() {
        popupMenu.setOnSelected(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (biller == null) {
                    if (e.getClickCount() == 2) {
                        biller = (MultiPaymentBiller) popupMenu.setSelectedValue(popupMenu.getSelectedIndex());
                        loadBillerForm();
                    }
                }
            }
            
        });
    }

    public void loadBillerForm(){
        panelinput.removeAll();
        panelinput.repaint();
        panelinput.revalidate();
        
        inputForm = new ForminputMPModule(biller, this);
        panelinput.add(inputForm);
        panelinput.repaint();
        panelinput.revalidate();
        
        panelinput.setVisible(true);
    }
    
    @Override
    public void search() {
        biller = null;
        Common.setVisibility(false, panelinput);
        getBiller();
    }

    @Override
    public void loadData() {
        try {
            LinkedList<JSONObject> data = transactionController.getMultiPaymentProductList();
            
            if (data != null && data.size() > 0) {
                data.forEach(dataBiller -> {
                    try {
                        JSONArray tArrayInput = new JSONArray();
                        
                        String biller = dataBiller.get("biller").toString();
                        String biller_name = dataBiller.get("biller_name").toString();
                        String label1 = dataBiller.has("input_1_label") ?
                                dataBiller.get("input_1_label").toString() : null;
                        String label1Type = dataBiller.has("input_1_type") ?
                                dataBiller.get("input_1_type").toString() : null;
                        
                        if(label1 != null && label1Type != null){
                            JSONObject inp = new JSONObject();
                            inp.put("label", label1);
                            inp.put("input", new JSONObject(label1Type));
                            tArrayInput.put(inp);
                        }
                        
                        String label2 = dataBiller.has("input_2_label") ?
                                dataBiller.get("input_2_label").toString() : null;
                        String label2Type = dataBiller.has("input_2_type") ?
                                dataBiller.get("input_2_type").toString() : null;
                        
                        if(label2 != null && label2Type != null){
                            JSONObject inp = new JSONObject();
                            inp.put("label", label2);
                            inp.put("input", new JSONObject(label2Type));
                            tArrayInput.put(inp);
                        }
                        
                        String label3 = dataBiller.has("input_3_label") ?
                                dataBiller.get("input_3_label").toString() : null;
                        String label3Type = dataBiller.has("input_3_type") ?
                                dataBiller.get("input_3_type").toString() : null;
                        
                        if(label3 != null && label3Type != null){
                            JSONObject inp = new JSONObject();
                            inp.put("label", label3);
                            inp.put("input", new JSONObject(label3Type));
                            tArrayInput.put(inp);
                        }
                        
                        String tDetails = dataBiller.has("details") ? dataBiller.get("details").toString() : "";
                        String[] detailArray = tDetails.replace("[", "").replace("]", "").split(";");
                        
                        MultiPaymentBiller model = new MultiPaymentBiller(biller, biller_name, tArrayInput, detailArray);
                        dataHolderList.putData(model);
                    } catch (SQLException ex) {
                        Common.showErrorMessage(MessageType.FATAL_ERROR, this);
                        Common.errorLog("[SQLException] Error on get multi payment", ex);
                        resetForm();
                    }
                });
            }
        } catch (SQLException e) {
            Common.showErrorMessage(MessageType.FATAL_ERROR, this);
            Common.errorLog("[SQLException] Error on get multi payment", e);
        }
    }
    
    private void getBiller() {
        String tBiller = txt_biller.getText().trim();
        if(tBiller.length()>0){
            popupMenu.show(dataHolderList, tBiller);
        }else{
            popupMenu.showAll(dataHolderList);
        }
    }

    @Override
    public void performInquiry() {
        try {
            MPInquiry request = new MPInquiry(biller);
            billerResponse = sendRequest(request);

            if (billerResponse != null) {
                saveTransaction();
                JSONObject tPayload = billerResponse.getPayload();
                BigDecimal tTotalTag = new BigDecimal(tPayload.get("totaltag").toString());
                BigDecimal tAdminTag = new BigDecimal(tPayload.get("admin").toString());
                BigDecimal tTagihan = new BigDecimal(tPayload.get("jmltagihan").toString());
                txt_total_tagihan.setText(Common.formatRupiah(tTotalTag.doubleValue()));
                txt_tagihan.setText(Common.formatRupiah(tTagihan.doubleValue()));
                txt_admin_charge.setText(Common.formatRupiah(tAdminTag.doubleValue()));
                
                JSONObject tData = tPayload.getJSONObject("data");

                int index = 0;
                for (String key : biller.getDetailList()) {
                    if(tData.has(key)){
                        detailLabelList.get(index).setText(key);
                        detailLabelList.get(index).setVisible(true);
                        detailFieldList.get(index).setText(tData.get(key).toString());
                        detailFieldList.get(index).setVisible(true);
                        index++;
                    }
                }
                
                Common.activateComponent(true, btn_bayar, btn_batal);
                Common.activateComponent(false, btn_refresh, txt_biller);
                Common.setVisibility(true, panelbayar, paneldetail);
                inputForm.activateForm(false);
            } else {
                txt_biller.requestFocus();
            }
        } catch (JSONException | SQLException e) {
            Common.errorLog("[JSONException | SQLException] Failed to execute Perform "+biller.getBillername()+" inquiry", e);
            Common.showErrorMessage(MessageType.FATAL_ERROR, this);
        }catch (Exception e) {
            Common.errorLog("[Exception] Failed to execute Perform "+biller.getBillername()+" inquiry", e);
            Common.showErrorMessage(MessageType.FATAL_ERROR, this);
        }
    }

    @Override
    public void performPayment() {
        try {
            prePostPayment("trx_mp_sales", billerResponse);
            
            MPPayment request = new MPPayment(billerResponse, biller);
            billerResponse = sendRequest(request);

            if (billerResponse != null) {
                if (billerResponse.getResponseCode() == RC.SUCCESS) {
                    updateDataTransaction();
                    Common.activateComponent(false, btn_bayar);
                }else{
                    Common.activateComponent(false, btn_bayar);
                }
            } else {
                transactionController.updateFailedTransaction("trx_mp_sales", request);
                Common.activateComponent(false, btn_bayar);
            }
        } catch (SQLException e) {
            Common.errorLog("[SQLException] Failed to execute Perform "+biller.getInfo()+" payment", e);
            Common.showErrorMessage(MessageType.SYSTEM_ERROR, this);
            Common.activateComponent(false, btn_bayar);
        } catch (Exception e) {
            Common.errorLog("[Exception] Failed to execute Perform "+biller.getInfo()+" payment", e);
            Common.showErrorMessage(MessageType.FATAL_ERROR, this);
            Common.activateComponent(false, btn_bayar);
        }
    }

    @Override
    public boolean validateForm() {
        if(biller == null){
            biller = (MultiPaymentBiller) popupMenu.getSelectedModel();
        }
        
        return txt_biller.getText().length() > 0
                && biller != null;
    }

    @Override
    public void updateDataTransaction() {
        try {
            JSONObject resp = billerResponse.getPayload();
            transactionController.updateSuccessTransactionMultiPayment(resp);
            Common.showInfoMessage(resp.getString("rcm"), this);
            previewStruk(resp.getString("trxid"), "trx_mp_sales");
        } catch (JSONException | SQLException e) {
            Common.showErrorMessage(MessageType.SYSTEM_ERROR, this);
            Common.errorLog("[SQLException] Error on insert prepaid transaction", e);
            resetForm();
        }
    }

    @Override
    public QueryBuilder contructQueryInsertTransaction() {
        JSONObject resp = billerResponse.getPayload();
        QueryBuilder builder = new QueryBuilder("trx_mp_sales", QueryType.INSERT);
        builder.addEntryValue("id", "UUID()", true);
        builder.addEntryValue("transaction_date", "NOW()", true);
        builder.addEntryValue("user_id", App.environment().getDEU());
        builder.addEntryValue("transaction_id", resp.get("trxid").toString());
        builder.addEntryValue("refnumber", resp.get("refnum").toString());
        builder.addEntryValue("biller", biller.getBiller());
        builder.addEntryValue("admin_charge", resp.get("admin").toString());
        builder.addEntryValue("total_bill_amount", resp.get("totaltag").toString());
        builder.addEntryValue("bill_amount", resp.get("jmltagihan").toString());
        builder.addEntryValue("transaction_data", resp.getJSONObject("data").toString());
        builder.addEntryValue("info", resp.get("text").toString());
        builder.addEntryValue("no_faktur", "");

        if (resp.has("input1")) {
            builder.addEntryValue("input_id_1", resp.getString("input1"));
        }

        if (resp.has("input2")) {
            builder.addEntryValue("input_id_2", resp.getString("input2"));
        }

        if (resp.has("input3")) {
            builder.addEntryValue("input_id_3", resp.getString("input3"));
        }

        return builder;
    }
    
    @Override
    public Field[][] createBodyStruk(JSONObject pTranmainData) {
        return createBodyStrukMP(pTranmainData);
    }
}
