/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.id.ez.ezpay.view.table;

import co.id.ez.ezpay.abstracts.AbstractViewLaporan;
import co.id.ez.ezpay.app.Common;
import co.id.ez.ezpay.enums.util.Icons;
import co.id.ez.ezpay.interfaces.DataTable;
import co.id.ez.ezpay.model.table.DataTableModel;
import co.id.ez.ezpay.util.swings.table.TableActionEvent;
import co.id.ez.ezpay.util.swings.table.TableHeader;
import co.id.ez.ezpay.util.swings.table.pagination.PaginationDataProvider;
import java.awt.Color;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Arrays;
import java.util.LinkedList;
import javax.swing.Box;
import javax.swing.ButtonGroup;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JToggleButton;
import javax.swing.SwingConstants;
import javax.swing.event.TableModelEvent;

/**
 *
 * @author Lutfi
 */
public class ViewTableData extends JPanel {
    
    private AbstractViewLaporan consumer;
    private final DataTableModel<DataTable> model;
    private PaginationDataProvider<DataTable, TableHeader> dataProvider;
    private final int[] pageSizes;
    private int currentPageSize = 50;
    private int currentPage = 1;
    private JPanel pageLinkPanel;
    private final int maxPagingCompToShow = 10;
    private final String ellipses = "...";

    /**
     * Creates new form VewTableData
     * @param pTableHeader
     */
    public ViewTableData(LinkedList<TableHeader> pTableHeader) {
        this(pTableHeader, false);
    }
    
    public ViewTableData(LinkedList<TableHeader> pTableHeader, boolean isSearchable) {
        this(pTableHeader, isSearchable, true);
    }
    
    public void hideHeaderSeparator() {
        jSeparator1.setVisible(false);
    }
    
    public void autoSrollMode(){
        tabel_data.setAutoResizeMode(0);
    }
    
    public ViewTableData(LinkedList<TableHeader> pTableHeader, boolean isSearchable, boolean isPrintable) {
        this.pageSizes = new int[]{5, 10, 20, 50, 75, 100};
        model  = new DataTableModel(pTableHeader);
        initComponents();
        initForm();
        Common.setVisibility(isPrintable, btn_export_pdf);
        Common.setVisibility(isSearchable, icon_search, txt_cari);
        Common.setOpaqueComponent(false, jPanel4, jPanel2, panel_search_print, panel_action, jSeparator1);
        tabel_data.fixTable(jScrollPane2);
        if (!isPrintable && !isSearchable) {
            panel_action.setVisible(false);
        }
        roundPanel1.unGradient();
    }
    
    public void initConsumer(AbstractViewLaporan consumer) {
        this.consumer = consumer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        panel_action = new javax.swing.JPanel();
        panel_search_print = new javax.swing.JPanel();
        btn_export_pdf = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        icon_search = new javax.swing.JLabel();
        txt_cari = new co.id.ez.ezpay.util.swings.input.SearchText();
        jSeparator1 = new javax.swing.JSeparator();
        roundPanel1 = new co.id.ez.ezpay.util.swings.RoundPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_data = new co.id.ez.ezpay.util.swings.table.ui.Table();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setLayout(new java.awt.CardLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        panel_action.setLayout(new java.awt.BorderLayout());

        panel_search_print.setPreferredSize(new java.awt.Dimension(442, 45));

        btn_export_pdf.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btn_export_pdf.setForeground(new java.awt.Color(27, 38, 44));
        btn_export_pdf.setText("Tampilkan laporan");
        btn_export_pdf.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_export_pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_export_pdfActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        icon_search.setForeground(new java.awt.Color(255, 255, 255));
        icon_search.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icon_search.setText(" ");
        jPanel4.add(icon_search);

        txt_cari.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txt_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cariActionPerformed(evt);
            }
        });
        txt_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cariKeyPressed(evt);
            }
        });
        jPanel4.add(txt_cari);

        javax.swing.GroupLayout panel_search_printLayout = new javax.swing.GroupLayout(panel_search_print);
        panel_search_print.setLayout(panel_search_printLayout);
        panel_search_printLayout.setHorizontalGroup(
            panel_search_printLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_search_printLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_export_pdf)
                .addContainerGap())
        );
        panel_search_printLayout.setVerticalGroup(
            panel_search_printLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_search_printLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_search_printLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_export_pdf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_action.add(panel_search_print, java.awt.BorderLayout.CENTER);

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 1));
        panel_action.add(jSeparator1, java.awt.BorderLayout.PAGE_START);

        jPanel2.add(panel_action, java.awt.BorderLayout.PAGE_START);

        roundPanel1.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        roundPanel1.setRound(10);
        roundPanel1.setLayout(new java.awt.BorderLayout());

        tabel_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabel_data);

        roundPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel5.setOpaque(false);
        jPanel5.setPreferredSize(new java.awt.Dimension(718, 3));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        roundPanel1.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jPanel6.setOpaque(false);
        jPanel6.setPreferredSize(new java.awt.Dimension(718, 3));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 718, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        roundPanel1.add(jPanel6, java.awt.BorderLayout.PAGE_END);

        jPanel7.setOpaque(false);
        jPanel7.setPreferredSize(new java.awt.Dimension(3, 3));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        roundPanel1.add(jPanel7, java.awt.BorderLayout.LINE_START);

        jPanel8.setOpaque(false);
        jPanel8.setPreferredSize(new java.awt.Dimension(3, 3));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 383, Short.MAX_VALUE)
        );

        roundPanel1.add(jPanel8, java.awt.BorderLayout.LINE_END);

        jPanel2.add(roundPanel1, java.awt.BorderLayout.CENTER);

        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(5, 100));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 391, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(5, 100));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 391, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel3, java.awt.BorderLayout.LINE_END);

        add(jPanel2, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btn_export_pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_export_pdfActionPerformed
        // TODO add your handling code here:
        if (model.getData().size() > 0) {
            if (Common.showConfirmMessage("Tampilkan laporan ?", null) == 0) {
                consumer.loadReport();
            }
        } else {
            Common.showWarningMessage("Tidak ada data yang ditampilkan", this);
        }
    }//GEN-LAST:event_btn_export_pdfActionPerformed

    private void txt_cariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cariKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            consumer.loadData(txt_cari.getText());
        }
    }//GEN-LAST:event_txt_cariKeyPressed

    private void txt_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cariActionPerformed
        // TODO add your handling code here:
        consumer.loadData(txt_cari.getText());
    }//GEN-LAST:event_txt_cariActionPerformed
    
    public final void initForm() {
        Common.setOpaqueComponent(false, panel_search_print, jPanel2, this);
        btn_export_pdf.setIcon(Icons.LARGE_PREVIEW.get());
        btn_export_pdf.setToolTipText("view report");
        icon_search.setIcon(Icons.LARGE_SEARCH_TEXT.get());
        jPanel2.add(createPaginationPanel(), java.awt.BorderLayout.PAGE_END);
        model.addTableModelListener(this::refreshPageButtonPanel);
    }
    
    public void clearTable() {
        if (model != null) {
            model.clearAllItem(tabel_data);
            currentPage = 1;
        }
    }
    
    public void setValueTable(int row, int column, Object value) {
        tabel_data.setValueAt(value, row, column);
    }
    
    public <T extends DataTable>  void loadDataToTables(LinkedList<T> rows) {
        loadDataToTables(rows, null);
    }
    
    public <T extends DataTable>  void loadDataToTables(LinkedList<T> rows, TableActionEvent event) {
        dataProvider = new PaginationDataProvider().create(model.getHeader(), rows, event);
        paginate();
    }
    
    public DataTableModel getTableModel() {
        return model;
    }
    
    private JPanel createPaginationPanel() {
        JPanel paginationPanel = new JPanel();
        pageLinkPanel = new JPanel(new GridLayout(1, maxPagingCompToShow, 3, 3));
        paginationPanel.add(pageLinkPanel);
        
        if (pageSizes != null) {
            JComboBox<Integer> pageComboBox = new JComboBox<>(
                    Arrays.stream(pageSizes).boxed()
                            .toArray(Integer[]::new));
            pageComboBox.addActionListener((ActionEvent e) -> {
                int currentPageStartRow = ((currentPage - 1) * currentPageSize) + 1;
                currentPageSize = (Integer) pageComboBox.getSelectedItem();
                currentPage = ((currentPageStartRow - 1) / currentPageSize) + 1;
                paginate();
            });
            paginationPanel.add(Box.createHorizontalStrut(15));
            JLabel lbl = new JLabel("Page Size: ");
            lbl.setForeground(Color.WHITE);
            paginationPanel.add(lbl);
            paginationPanel.add(pageComboBox);
            pageComboBox.setSelectedItem(currentPageSize);
        }
        Common.setOpaqueComponent(false, paginationPanel, pageLinkPanel, icon_search);
        return paginationPanel;
    }
    
    public void paginate() {
        if (dataProvider != null) {
            int startIndex = (currentPage - 1) * currentPageSize;
            int endIndex = startIndex + currentPageSize;
            if (endIndex > dataProvider.getTotalRowCount()) {
                endIndex = dataProvider.getTotalRowCount();
            }
            
            model.initDataToTable(
                    tabel_data,
                    dataProvider.getRows(startIndex, endIndex),
                    dataProvider.getActionEvent()
            );
            model.fireTableDataChanged();
        }
        
    }
    
    private void refreshPageButtonPanel(TableModelEvent tme) {
        pageLinkPanel.removeAll();
        int totalRows = dataProvider.getTotalRowCount();
        int pages = (int) Math.ceil((double) totalRows / currentPageSize);
        ButtonGroup buttonGroup = new ButtonGroup();
        if (pages > maxPagingCompToShow) {
            addPageButton(pageLinkPanel, buttonGroup, 1);
            if (currentPage > (pages - ((maxPagingCompToShow + 1) / 2))) {
                pageLinkPanel.add(createEllipsesComponent());
                addPageButtonRange(pageLinkPanel, buttonGroup, pages - maxPagingCompToShow + 3, pages);
            } else if (currentPage <= (maxPagingCompToShow + 1) / 2) {
                addPageButtonRange(pageLinkPanel, buttonGroup, 2, maxPagingCompToShow - 2);
                pageLinkPanel.add(createEllipsesComponent());
                addPageButton(pageLinkPanel, buttonGroup, pages);
            } else {
                pageLinkPanel.add(createEllipsesComponent());
                int start = currentPage - (maxPagingCompToShow - 4) / 2;
                int end = start + maxPagingCompToShow - 5;
                addPageButtonRange(pageLinkPanel, buttonGroup, start, end);
                pageLinkPanel.add(createEllipsesComponent());
                addPageButton(pageLinkPanel, buttonGroup, pages);
            }
        } else {
            addPageButtonRange(pageLinkPanel, buttonGroup, 1, pages);
        }
        pageLinkPanel.getParent().validate();
        pageLinkPanel.getParent().repaint();
    }
    
    private Component createEllipsesComponent() {
        return new JLabel(ellipses, SwingConstants.CENTER);
    }
    
    private void addPageButtonRange(JPanel parentPanel, ButtonGroup buttonGroup, int start, int end) {
        for (; start <= end; start++) {
            addPageButton(parentPanel, buttonGroup, start);
        }
    }
    
    private void addPageButton(JPanel parentPanel, ButtonGroup buttonGroup, int pageNumber) {
        JToggleButton toggleButton = new JToggleButton(Integer.toString(pageNumber));
        toggleButton.setMargin(new Insets(1, 3, 1, 3));
        buttonGroup.add(toggleButton);
        parentPanel.add(toggleButton);
        if (pageNumber == currentPage) {
            toggleButton.setSelected(true);
        }
        toggleButton.addActionListener(ae -> {
            currentPage = Integer.parseInt(ae.getActionCommand());
            paginate();
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_export_pdf;
    private javax.swing.JLabel icon_search;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel panel_action;
    private javax.swing.JPanel panel_search_print;
    private co.id.ez.ezpay.util.swings.RoundPanel roundPanel1;
    private co.id.ez.ezpay.util.swings.table.ui.Table tabel_data;
    private co.id.ez.ezpay.util.swings.input.SearchText txt_cari;
    // End of variables declaration//GEN-END:variables
}
