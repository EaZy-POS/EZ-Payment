-- Script generated by Redgate Compare v1.19.7.21820


-- deployment: Creating trx_vcr_sales...
CREATE TABLE trx_vcr_sales (
    id char(50) NOT NULL,
    transaction_date datetime NOT NULL,
    user_id char(30) NOT NULL,
    transaction_id char(30) NOT NULL,
    dest_number char(20) NOT NULL,
    voucher_id char(6) NOT NULL,
    nominal bigint(20) NULL DEFAULT 0,
    harga bigint(20) NULL,
    harga_jual bigint(20) NULL,
    refnumber varchar(50) NULL,
    serial_number varchar(30) NULL,
    info text NULL,
    no_faktur varchar(30) NULL,
    paid_date datetime NULL,
    flag int(1) NULL DEFAULT 0
);
ALTER TABLE trx_vcr_sales ADD PRIMARY KEY (id, transaction_id);


-- deployment: Creating trx_pre_sales...
CREATE TABLE trx_pre_sales (
    id char(50) NOT NULL,
    transaction_date datetime NOT NULL,
    transaction_id char(30) NOT NULL,
    user_id char(30) NULL,
    subscriber_id varchar(20) NOT NULL,
    msn varchar(20) NULL,
    subscriber_name varchar(50) NOT NULL,
    segmentation varchar(20) NULL,
    admin bigint(12) NULL,
    nominal bigint(12) NULL,
    total bigint(12) NULL,
    harga_jual bigint(12) NULL,
    kwh varchar(12) NULL,
    token varchar(30) NULL,
    refnumber varchar(50) NULL,
    info text NULL,
    no_faktur varchar(50) NULL,
    paid_date datetime NULL,
    flag int(1) NULL DEFAULT 0
);
ALTER TABLE trx_pre_sales ADD PRIMARY KEY (id);


-- deployment: Creating v_pre_transaction...
CREATE VIEW v_pre_transaction AS select `trx_pre_sales`.`id` AS `id`,`trx_pre_sales`.`transaction_date` AS `transaction_date`,`trx_pre_sales`.`transaction_id` AS `transaction_id`,`trx_pre_sales`.`user_id` AS `user_id`,`trx_pre_sales`.`subscriber_id` AS `subscriber_id`,`trx_pre_sales`.`msn` AS `msn`,`trx_pre_sales`.`subscriber_name` AS `subscriber_name`,`trx_pre_sales`.`segmentation` AS `segmentation`,`trx_pre_sales`.`admin` AS `admin`,`trx_pre_sales`.`nominal` AS `nominal`,`trx_pre_sales`.`total` AS `total`,`trx_pre_sales`.`harga_jual` AS `harga_jual`,`trx_pre_sales`.`kwh` AS `kwh`,`trx_pre_sales`.`token` AS `token`,`trx_pre_sales`.`refnumber` AS `refnumber`,`trx_pre_sales`.`info` AS `info`,`trx_pre_sales`.`no_faktur` AS `no_faktur`,`trx_pre_sales`.`paid_date` AS `paid_date`,`trx_pre_sales`.`flag` AS `flag` from `trx_pre_sales` where (`trx_pre_sales`.`flag` > 0) order by `trx_pre_sales`.`transaction_date`,`trx_pre_sales`.`paid_date` desc;


-- deployment: Creating v_pre_summary_monthly...
CREATE VIEW v_pre_summary_monthly AS select date_format(`v_pre_transaction`.`paid_date`,'%Y-%m') AS `transaction_date`,count(`v_pre_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_pre_transaction`.`harga_jual`) AS `total_amount` from `v_pre_transaction` where (`v_pre_transaction`.`flag` = 1) group by date_format(`v_pre_transaction`.`paid_date`,'%Y-%m') order by `v_pre_transaction`.`paid_date` desc;


-- deployment: Creating v_pre_summary_daily...
CREATE VIEW v_pre_summary_daily AS select date_format(`v_pre_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,count(`v_pre_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_pre_transaction`.`harga_jual`) AS `total_amount` from `v_pre_transaction` where (`v_pre_transaction`.`flag` = 1) group by date_format(`v_pre_transaction`.`paid_date`,'%Y-%m-%d') order by `v_pre_transaction`.`paid_date` desc;


-- deployment: Creating v_pre_monthly_report...
CREATE VIEW v_pre_monthly_report AS select date_format(`v_pre_transaction`.`paid_date`,'%Y-%m') AS `bulan`,date_format(`v_pre_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,count(`v_pre_transaction`.`transaction_id`) AS `jml_transaksi`,sum(`v_pre_transaction`.`harga_jual`) AS `jml_amount` from `v_pre_transaction` where (`v_pre_transaction`.`flag` = 1) group by date_format(`v_pre_transaction`.`paid_date`,'%Y-%m') order by `v_pre_transaction`.`paid_date` desc;


-- deployment: Creating v_pre_daily_report...
CREATE VIEW v_pre_daily_report AS select date_format(`v_pre_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,`v_pre_transaction`.`transaction_id` AS `transaction_id`,`v_pre_transaction`.`user_id` AS `user_id`,`v_pre_transaction`.`subscriber_id` AS `subscriber_id`,`v_pre_transaction`.`msn` AS `msn`,`v_pre_transaction`.`subscriber_name` AS `subscriber_name`,`v_pre_transaction`.`segmentation` AS `segmentation`,`v_pre_transaction`.`admin` AS `admin`,`v_pre_transaction`.`nominal` AS `nominal`,`v_pre_transaction`.`total` AS `total`,`v_pre_transaction`.`harga_jual` AS `harga_jual`,`v_pre_transaction`.`kwh` AS `kwh`,`v_pre_transaction`.`token` AS `token`,`v_pre_transaction`.`refnumber` AS `refnumber`,`v_pre_transaction`.`info` AS `info` from `v_pre_transaction` where (`v_pre_transaction`.`flag` = 1) order by `v_pre_transaction`.`paid_date` desc;


-- deployment: Creating trx_pos_sales...
CREATE TABLE trx_pos_sales (
    id char(50) NOT NULL,
    transaction_date datetime NOT NULL,
    user_id char(30) NOT NULL,
    transaction_id char(30) NOT NULL,
    subscriber_id varchar(50) NOT NULL,
    subscriber_name varchar(50) NOT NULL,
    segmentation varchar(50) NULL,
    bill_status varchar(20) NULL,
    total_bill bigint(20) NULL,
    total_denda bigint(20) NULL,
    total_bill_amount bigint(20) NULL,
    total_admin_charge bigint(20) NULL,
    periode_1 varchar(255) NULL,
    bill_amount_1 bigint(20) NULL,
    meter_1 varchar(50) NULL,
    bill_denda_1 bigint(20) NULL,
    bill_adm_1 bigint(20) NULL,
    periode_2 char(10) NULL,
    bill_amount_2 bigint(20) NULL,
    meter_2 varchar(50) NULL,
    bill_denda_2 bigint(20) NULL,
    bill_adm_2 bigint(20) NULL,
    periode_3 char(10) NULL,
    bill_amount_3 bigint(20) NULL,
    meter_3 varchar(50) NULL,
    bill_denda_3 bigint(20) NULL,
    bill_adm_3 bigint(20) NULL,
    periode_4 char(10) NULL,
    bill_amount_4 bigint(20) NULL,
    meter_4 varchar(50) NULL,
    bill_denda_4 bigint(20) NULL,
    bill_adm_4 bigint(20) NULL,
    refnumber varchar(50) NULL,
    flag int(11) NULL DEFAULT 0,
    paid_date datetime NULL,
    info text NULL,
    no_faktur varchar(30) NULL,
    info1 text NULL,
    info2 text NULL,
    info3 text NULL
);
ALTER TABLE trx_pos_sales ADD PRIMARY KEY (id);


-- deployment: Creating v_pos_transaction...
CREATE VIEW v_pos_transaction AS select `trx_pos_sales`.`id` AS `id`,`trx_pos_sales`.`transaction_date` AS `transaction_date`,`trx_pos_sales`.`user_id` AS `user_id`,`trx_pos_sales`.`transaction_id` AS `transaction_id`,`trx_pos_sales`.`subscriber_id` AS `subscriber_id`,`trx_pos_sales`.`subscriber_name` AS `subscriber_name`,`trx_pos_sales`.`segmentation` AS `segmentation`,`trx_pos_sales`.`bill_status` AS `bill_status`,`trx_pos_sales`.`total_bill` AS `total_bill`,`trx_pos_sales`.`total_denda` AS `total_denda`,`trx_pos_sales`.`total_bill_amount` AS `total_bill_amount`,`trx_pos_sales`.`total_admin_charge` AS `total_admin_charge`,`trx_pos_sales`.`periode_1` AS `periode_1`,`trx_pos_sales`.`bill_amount_1` AS `bill_amount_1`,`trx_pos_sales`.`meter_1` AS `meter_1`,`trx_pos_sales`.`bill_denda_1` AS `bill_denda_1`,`trx_pos_sales`.`bill_adm_1` AS `bill_adm_1`,`trx_pos_sales`.`periode_2` AS `periode_2`,`trx_pos_sales`.`bill_amount_2` AS `bill_amount_2`,`trx_pos_sales`.`meter_2` AS `meter_2`,`trx_pos_sales`.`bill_denda_2` AS `bill_denda_2`,`trx_pos_sales`.`bill_adm_2` AS `bill_adm_2`,`trx_pos_sales`.`periode_3` AS `periode_3`,`trx_pos_sales`.`bill_amount_3` AS `bill_amount_3`,`trx_pos_sales`.`meter_3` AS `meter_3`,`trx_pos_sales`.`bill_denda_3` AS `bill_denda_3`,`trx_pos_sales`.`bill_adm_3` AS `bill_adm_3`,`trx_pos_sales`.`periode_4` AS `periode_4`,`trx_pos_sales`.`bill_amount_4` AS `bill_amount_4`,`trx_pos_sales`.`meter_4` AS `meter_4`,`trx_pos_sales`.`bill_denda_4` AS `bill_denda_4`,`trx_pos_sales`.`bill_adm_4` AS `bill_adm_4`,`trx_pos_sales`.`refnumber` AS `refnumber`,`trx_pos_sales`.`flag` AS `flag`,`trx_pos_sales`.`paid_date` AS `paid_date`,`trx_pos_sales`.`info` AS `info`,`trx_pos_sales`.`no_faktur` AS `no_faktur`,`trx_pos_sales`.`info1` AS `info1`,`trx_pos_sales`.`info2` AS `info2`,`trx_pos_sales`.`info3` AS `info3` from `trx_pos_sales` where (`trx_pos_sales`.`flag` > 0) order by `trx_pos_sales`.`transaction_date`,`trx_pos_sales`.`paid_date` desc;


-- deployment: Creating v_pos_summary_monthly...
CREATE VIEW v_pos_summary_monthly AS select date_format(`v_pos_transaction`.`paid_date`,'%Y-%m') AS `transaction_date`,count(`v_pos_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_pos_transaction`.`total_bill_amount`) AS `total_amount` from `v_pos_transaction` where (`v_pos_transaction`.`flag` = 1) group by date_format(`v_pos_transaction`.`paid_date`,'%Y-%m') order by date_format(`v_pos_transaction`.`paid_date`,'%Y-%m');


-- deployment: Creating v_pos_summary_daily...
CREATE VIEW v_pos_summary_daily AS select date_format(`v_pos_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,count(`v_pos_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_pos_transaction`.`total_bill_amount`) AS `total_amount` from `v_pos_transaction` where (`v_pos_transaction`.`flag` = 1) group by date_format(`v_pos_transaction`.`paid_date`,'%Y-%m-%d') order by date_format(`v_pos_transaction`.`paid_date`,'%Y-%m-%d');


-- deployment: Creating v_pos_monthly_report...
CREATE VIEW v_pos_monthly_report AS select date_format(`v_pos_transaction`.`paid_date`,'%Y-%m') AS `bulan`,date_format(`v_pos_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,count(`v_pos_transaction`.`transaction_id`) AS `jml_transaksi`,sum(`v_pos_transaction`.`total_bill_amount`) AS `jml_amount` from `v_pos_transaction` where (`v_pos_transaction`.`flag` = 1) group by date_format(`v_pos_transaction`.`paid_date`,'%Y-%m-%d') order by date_format(`v_pos_transaction`.`paid_date`,'%Y-%m-%d');


-- deployment: Creating v_pos_daily_report...
CREATE VIEW v_pos_daily_report AS select date_format(`v_pos_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,`v_pos_transaction`.`user_id` AS `user_id`,`v_pos_transaction`.`transaction_id` AS `transaction_id`,`v_pos_transaction`.`subscriber_id` AS `subscriber_id`,`v_pos_transaction`.`subscriber_name` AS `subscriber_name`,ifnull(`v_pos_transaction`.`segmentation`,'-') AS `segmentation`,`v_pos_transaction`.`bill_status` AS `bill_status`,`v_pos_transaction`.`total_bill` AS `total_bill`,`v_pos_transaction`.`total_denda` AS `total_denda`,`v_pos_transaction`.`total_admin_charge` AS `total_admin_charge`,`v_pos_transaction`.`total_bill_amount` AS `total_bill_amount`,`v_pos_transaction`.`periode_1` AS `periode_1`,`v_pos_transaction`.`bill_amount_1` AS `bill_amount_1`,`v_pos_transaction`.`meter_1` AS `meter_1`,`v_pos_transaction`.`bill_denda_1` AS `bill_denda_1`,`v_pos_transaction`.`bill_adm_1` AS `bill_adm_1`,`v_pos_transaction`.`periode_2` AS `periode_2`,`v_pos_transaction`.`bill_amount_2` AS `bill_amount_2`,`v_pos_transaction`.`meter_2` AS `meter_2`,`v_pos_transaction`.`bill_denda_2` AS `bill_denda_2`,`v_pos_transaction`.`bill_adm_2` AS `bill_adm_2`,`v_pos_transaction`.`periode_3` AS `periode_3`,`v_pos_transaction`.`bill_amount_3` AS `bill_amount_3`,`v_pos_transaction`.`meter_3` AS `meter_3`,`v_pos_transaction`.`bill_denda_3` AS `bill_denda_3`,`v_pos_transaction`.`bill_adm_3` AS `bill_adm_3`,`v_pos_transaction`.`periode_4` AS `periode_4`,`v_pos_transaction`.`bill_amount_4` AS `bill_amount_4`,`v_pos_transaction`.`meter_4` AS `meter_4`,`v_pos_transaction`.`bill_denda_4` AS `bill_denda_4`,`v_pos_transaction`.`bill_adm_4` AS `bill_adm_4`,`v_pos_transaction`.`refnumber` AS `refnumber`,`v_pos_transaction`.`info` AS `info`,`v_pos_transaction`.`info1` AS `info1`,`v_pos_transaction`.`info2` AS `info2`,`v_pos_transaction`.`info3` AS `info3` from `v_pos_transaction` where (`v_pos_transaction`.`flag` = 1) order by date_format(`v_pos_transaction`.`paid_date`,'%Y-%m-%d');


-- deployment: Creating trx_pam_sales...
CREATE TABLE trx_pam_sales (
    id char(50) NOT NULL,
    transaction_date datetime NOT NULL,
    user_id char(30) NOT NULL,
    transaction_id char(30) NOT NULL,
    subscriber_id varchar(50) NOT NULL,
    subscriber_name varchar(50) NOT NULL,
    subscriber_segmentation varchar(50) NULL,
    total_bill varchar(15) NULL,
    total_bill_amount bigint(20) NULL,
    total_admin_charge bigint(20) NULL,
    bill_status int(1) NULL DEFAULT 0,
    periode_1 varchar(255) NULL,
    bill_amount_1 bigint(20) NULL,
    bill_stamp_1 bigint(12) unsigned zerofill NULL,
    bill_penalty_1 bigint(20) NULL,
    bill_danameter_1 bigint(20) NULL,
    bill_vat_1 bigint(20) NULL,
    bill_waste_1 bigint(20) NULL,
    bill_installment_1 bigint(20) NULL,
    meter_usage_1 int(11) NULL,
    meter_start_1 int(11) NULL,
    meter_end_1 int(11) NULL,
    bill_adm_pdam_1 bigint(20) NULL,
    bill_adm_1 bigint(20) NULL,
    periode_2 char(10) NULL,
    bill_amount_2 bigint(20) NULL,
    bill_stamp_2 bigint(20) NULL,
    bill_penalty_2 bigint(20) NULL,
    bill_danameter_2 bigint(20) NULL,
    bill_vat_2 bigint(20) NULL,
    bill_waste_2 bigint(20) NULL,
    bill_installment_2 bigint(20) NULL,
    meter_usage_2 int(11) NULL,
    meter_start_2 int(11) NULL,
    meter_end_2 int(11) NULL,
    bill_adm_pdam_2 bigint(20) NULL,
    bill_adm_2 bigint(20) NULL,
    periode_3 char(10) NULL,
    bill_amount_3 bigint(20) NULL,
    bill_stamp_3 bigint(20) NULL,
    bill_penalty_3 bigint(20) NULL,
    bill_danameter_3 bigint(20) NULL,
    bill_vat_3 bigint(20) NULL,
    bill_waste_3 bigint(20) NULL,
    bill_installment_3 bigint(20) NULL,
    meter_usage_3 int(11) NULL,
    meter_start_3 int(11) NULL,
    meter_end_3 int(11) NULL,
    bill_adm_pdam_3 bigint(20) NULL,
    bill_adm_3 bigint(20) NULL,
    periode_4 char(10) NULL,
    bill_amount_4 bigint(20) NULL,
    bill_stamp_4 bigint(20) NULL,
    bill_penalty_4 bigint(20) NULL,
    bill_danameter_4 bigint(20) NULL,
    bill_vat_4 bigint(20) NULL,
    bill_waste_4 bigint(20) NULL,
    bill_installment_4 bigint(20) NULL,
    meter_usage_4 int(11) NULL,
    meter_start_4 int(11) NULL,
    meter_end_4 int(11) NULL,
    bill_adm_pdam_4 bigint(20) NULL,
    bill_adm_4 bigint(20) NULL,
    refnumber varchar(50) NULL,
    info text NULL,
    biller varchar(50) NULL,
    no_faktur varchar(30) NULL,
    paid_date datetime NULL,
    flag int(1) NULL DEFAULT 0
);
ALTER TABLE trx_pam_sales ADD PRIMARY KEY (id);


-- deployment: Creating v_pam_transaction...
CREATE VIEW v_pam_transaction AS select `trx_pam_sales`.`id` AS `id`,`trx_pam_sales`.`transaction_date` AS `transaction_date`,`trx_pam_sales`.`user_id` AS `user_id`,`trx_pam_sales`.`transaction_id` AS `transaction_id`,`trx_pam_sales`.`subscriber_id` AS `subscriber_id`,`trx_pam_sales`.`subscriber_name` AS `subscriber_name`,`trx_pam_sales`.`subscriber_segmentation` AS `subscriber_segmentation`,`trx_pam_sales`.`bill_status` AS `bill_status`,`trx_pam_sales`.`total_bill` AS `total_bill`,`trx_pam_sales`.`total_bill_amount` AS `total_bill_amount`,`trx_pam_sales`.`total_admin_charge` AS `total_admin_charge`,`trx_pam_sales`.`periode_1` AS `periode_1`,`trx_pam_sales`.`bill_amount_1` AS `bill_amount_1`,`trx_pam_sales`.`bill_stamp_1` AS `bill_stamp_1`,`trx_pam_sales`.`bill_penalty_1` AS `bill_penalty_1`,`trx_pam_sales`.`bill_danameter_1` AS `bill_danameter_1`,`trx_pam_sales`.`bill_vat_1` AS `bill_vat_1`,`trx_pam_sales`.`bill_waste_1` AS `bill_waste_1`,`trx_pam_sales`.`bill_installment_1` AS `bill_installment_1`,`trx_pam_sales`.`meter_usage_1` AS `meter_usage_1`,`trx_pam_sales`.`meter_start_1` AS `meter_start_1`,`trx_pam_sales`.`meter_end_1` AS `meter_end_1`,`trx_pam_sales`.`bill_adm_pdam_1` AS `bill_adm_pdam_1`,`trx_pam_sales`.`bill_adm_1` AS `bill_adm_1`,`trx_pam_sales`.`periode_2` AS `periode_2`,`trx_pam_sales`.`bill_amount_2` AS `bill_amount_2`,`trx_pam_sales`.`bill_stamp_2` AS `bill_stamp_2`,`trx_pam_sales`.`bill_penalty_2` AS `bill_penalty_2`,`trx_pam_sales`.`bill_danameter_2` AS `bill_danameter_2`,`trx_pam_sales`.`bill_vat_2` AS `bill_vat_2`,`trx_pam_sales`.`bill_waste_2` AS `bill_waste_2`,`trx_pam_sales`.`bill_installment_2` AS `bill_installment_2`,`trx_pam_sales`.`meter_usage_2` AS `meter_usage_2`,`trx_pam_sales`.`meter_start_2` AS `meter_start_2`,`trx_pam_sales`.`meter_end_2` AS `meter_end_2`,`trx_pam_sales`.`bill_adm_pdam_2` AS `bill_adm_pdam_2`,`trx_pam_sales`.`bill_adm_2` AS `bill_adm_2`,`trx_pam_sales`.`periode_3` AS `periode_3`,`trx_pam_sales`.`bill_amount_3` AS `bill_amount_3`,`trx_pam_sales`.`bill_stamp_3` AS `bill_stamp_3`,`trx_pam_sales`.`bill_penalty_3` AS `bill_penalty_3`,`trx_pam_sales`.`bill_danameter_3` AS `bill_danameter_3`,`trx_pam_sales`.`bill_vat_3` AS `bill_vat_3`,`trx_pam_sales`.`bill_waste_3` AS `bill_waste_3`,`trx_pam_sales`.`bill_installment_3` AS `bill_installment_3`,`trx_pam_sales`.`meter_usage_3` AS `meter_usage_3`,`trx_pam_sales`.`meter_start_3` AS `meter_start_3`,`trx_pam_sales`.`meter_end_3` AS `meter_end_3`,`trx_pam_sales`.`bill_adm_pdam_3` AS `bill_adm_pdam_3`,`trx_pam_sales`.`bill_adm_3` AS `bill_adm_3`,`trx_pam_sales`.`periode_4` AS `periode_4`,`trx_pam_sales`.`bill_amount_4` AS `bill_amount_4`,`trx_pam_sales`.`bill_stamp_4` AS `bill_stamp_4`,`trx_pam_sales`.`bill_penalty_4` AS `bill_penalty_4`,`trx_pam_sales`.`bill_danameter_4` AS `bill_danameter_4`,`trx_pam_sales`.`bill_vat_4` AS `bill_vat_4`,`trx_pam_sales`.`bill_waste_4` AS `bill_waste_4`,`trx_pam_sales`.`bill_installment_4` AS `bill_installment_4`,`trx_pam_sales`.`meter_usage_4` AS `meter_usage_4`,`trx_pam_sales`.`meter_start_4` AS `meter_start_4`,`trx_pam_sales`.`meter_end_4` AS `meter_end_4`,`trx_pam_sales`.`bill_adm_pdam_4` AS `bill_adm_pdam_4`,`trx_pam_sales`.`bill_adm_4` AS `bill_adm_4`,`trx_pam_sales`.`refnumber` AS `refnumber`,`trx_pam_sales`.`info` AS `info`,`trx_pam_sales`.`biller` AS `biller`,`trx_pam_sales`.`no_faktur` AS `no_faktur`,`trx_pam_sales`.`paid_date` AS `paid_date`,`trx_pam_sales`.`flag` AS `flag` from `trx_pam_sales` where (`trx_pam_sales`.`flag` > 0) order by `trx_pam_sales`.`transaction_date`,`trx_pam_sales`.`paid_date` desc;


-- deployment: Creating v_pam_summary_monthly...
CREATE VIEW v_pam_summary_monthly AS select date_format(`v_pam_transaction`.`paid_date`,'%Y-%m') AS `transaction_date`,count(`v_pam_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_pam_transaction`.`total_bill_amount`) AS `total_amount` from `v_pam_transaction` where (`v_pam_transaction`.`flag` = 1) group by date_format(`v_pam_transaction`.`paid_date`,'%Y-%m') order by date_format(`v_pam_transaction`.`paid_date`,'%Y-%m');


-- deployment: Creating v_pam_summary_daily...
CREATE VIEW v_pam_summary_daily AS select date_format(`v_pam_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,count(`v_pam_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_pam_transaction`.`total_bill_amount`) AS `total_amount` from `v_pam_transaction` where (`v_pam_transaction`.`flag` = 1) group by date_format(`v_pam_transaction`.`paid_date`,'%Y-%m-%d') order by date_format(`v_pam_transaction`.`paid_date`,'%Y-%m-%d');


-- deployment: Creating v_pam_monthly_report...
CREATE VIEW v_pam_monthly_report AS select date_format(`v_pam_transaction`.`paid_date`,'%Y-%m') AS `bulan`,date_format(`v_pam_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,count(`v_pam_transaction`.`transaction_id`) AS `jml_transaksi`,sum(`v_pam_transaction`.`total_bill_amount`) AS `jml_amount` from `v_pam_transaction` where (`v_pam_transaction`.`flag` = 1) group by date_format(`v_pam_transaction`.`paid_date`,'%Y-%m-%d') order by date_format(`v_pam_transaction`.`paid_date`,'%Y-%m-%d');


-- deployment: Creating v_pam_daily_report...
CREATE VIEW v_pam_daily_report AS select date_format(`v_pam_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,`v_pam_transaction`.`user_id` AS `user_id`,`v_pam_transaction`.`transaction_id` AS `transaction_id`,`v_pam_transaction`.`subscriber_id` AS `subscriber_id`,`v_pam_transaction`.`subscriber_name` AS `subscriber_name`,`v_pam_transaction`.`subscriber_segmentation` AS `subscriber_segmentation`,`v_pam_transaction`.`total_bill` AS `total_bill`,`v_pam_transaction`.`total_bill_amount` AS `total_bill_amount`,`v_pam_transaction`.`total_admin_charge` AS `total_admin_charge`,`v_pam_transaction`.`periode_1` AS `periode_1`,`v_pam_transaction`.`bill_amount_1` AS `bill_amount_1`,`v_pam_transaction`.`bill_stamp_1` AS `bill_stamp_1`,`v_pam_transaction`.`bill_penalty_1` AS `bill_penalty_1`,`v_pam_transaction`.`bill_danameter_1` AS `bill_danameter_1`,`v_pam_transaction`.`bill_vat_1` AS `bill_vat_1`,`v_pam_transaction`.`bill_waste_1` AS `bill_waste_1`,`v_pam_transaction`.`bill_installment_1` AS `bill_installment_1`,`v_pam_transaction`.`meter_usage_1` AS `meter_usage_1`,`v_pam_transaction`.`meter_start_1` AS `meter_start_1`,`v_pam_transaction`.`meter_end_1` AS `meter_end_1`,`v_pam_transaction`.`bill_adm_pdam_1` AS `bill_adm_pdam_1`,`v_pam_transaction`.`bill_adm_1` AS `bill_adm_1`,`v_pam_transaction`.`periode_2` AS `periode_2`,`v_pam_transaction`.`bill_amount_2` AS `bill_amount_2`,`v_pam_transaction`.`bill_stamp_2` AS `bill_stamp_2`,`v_pam_transaction`.`bill_penalty_2` AS `bill_penalty_2`,`v_pam_transaction`.`bill_danameter_2` AS `bill_danameter_2`,`v_pam_transaction`.`bill_vat_2` AS `bill_vat_2`,`v_pam_transaction`.`bill_waste_2` AS `bill_waste_2`,`v_pam_transaction`.`bill_installment_2` AS `bill_installment_2`,`v_pam_transaction`.`meter_usage_2` AS `meter_usage_2`,`v_pam_transaction`.`meter_start_2` AS `meter_start_2`,`v_pam_transaction`.`meter_end_2` AS `meter_end_2`,`v_pam_transaction`.`bill_adm_pdam_2` AS `bill_adm_pdam_2`,`v_pam_transaction`.`bill_adm_2` AS `bill_adm_2`,`v_pam_transaction`.`periode_3` AS `periode_3`,`v_pam_transaction`.`bill_amount_3` AS `bill_amount_3`,`v_pam_transaction`.`bill_stamp_3` AS `bill_stamp_3`,`v_pam_transaction`.`bill_penalty_3` AS `bill_penalty_3`,`v_pam_transaction`.`bill_danameter_3` AS `bill_danameter_3`,`v_pam_transaction`.`bill_vat_3` AS `bill_vat_3`,`v_pam_transaction`.`bill_waste_3` AS `bill_waste_3`,`v_pam_transaction`.`bill_installment_3` AS `bill_installment_3`,`v_pam_transaction`.`meter_usage_3` AS `meter_usage_3`,`v_pam_transaction`.`meter_start_3` AS `meter_start_3`,`v_pam_transaction`.`meter_end_3` AS `meter_end_3`,`v_pam_transaction`.`bill_adm_pdam_3` AS `bill_adm_pdam_3`,`v_pam_transaction`.`bill_adm_3` AS `bill_adm_3`,`v_pam_transaction`.`periode_4` AS `periode_4`,`v_pam_transaction`.`bill_amount_4` AS `bill_amount_4`,`v_pam_transaction`.`bill_stamp_4` AS `bill_stamp_4`,`v_pam_transaction`.`bill_penalty_4` AS `bill_penalty_4`,`v_pam_transaction`.`bill_danameter_4` AS `bill_danameter_4`,`v_pam_transaction`.`bill_vat_4` AS `bill_vat_4`,`v_pam_transaction`.`bill_waste_4` AS `bill_waste_4`,`v_pam_transaction`.`bill_installment_4` AS `bill_installment_4`,`v_pam_transaction`.`meter_usage_4` AS `meter_usage_4`,`v_pam_transaction`.`meter_start_4` AS `meter_start_4`,`v_pam_transaction`.`meter_end_4` AS `meter_end_4`,`v_pam_transaction`.`bill_adm_pdam_4` AS `bill_adm_pdam_4`,`v_pam_transaction`.`bill_adm_4` AS `bill_adm_4`,`v_pam_transaction`.`refnumber` AS `refnumber`,`v_pam_transaction`.`info` AS `info`,`v_pam_transaction`.`biller` AS `biller`,`v_pam_transaction`.`bill_status` AS `bill_status` from `v_pam_transaction` where (`v_pam_transaction`.`flag` = 1) order by date_format(`v_pam_transaction`.`paid_date`,'%Y-%m-%d');


-- deployment: Creating trx_mp_sales...
CREATE TABLE trx_mp_sales (
    id char(50) NOT NULL,
    transaction_date datetime NOT NULL,
    user_id char(30) NOT NULL,
    transaction_id char(30) NOT NULL,
    input_id_1 varchar(20) NULL,
    input_id_2 varchar(20) NULL,
    input_id_3 varchar(20) NULL,
    total_bill_amount bigint(20) NULL,
    admin_charge bigint(20) NULL,
    bill_amount bigint(20) NULL,
    transaction_data text NULL,
    refnumber varchar(50) NULL,
    info text NULL,
    biller varchar(30) NULL,
    no_faktur varchar(30) NULL,
    paid_date datetime NULL,
    flag int(1) NULL DEFAULT 0
);
ALTER TABLE trx_mp_sales ADD PRIMARY KEY (id, transaction_id);


-- deployment: Creating mst_employes_position...
CREATE TABLE mst_employes_position (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(30) NULL,
    updated_at datetime NULL,
    updated_by varchar(50) NULL,
    position varchar(30) NOT NULL,
    access text NOT NULL
);
ALTER TABLE mst_employes_position 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST, 
ADD PRIMARY KEY (id, position);


-- deployment: Creating mst_employes...
CREATE TABLE mst_employes (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(30) NULL,
    updated_at datetime NULL,
    updated_by varchar(50) NULL,
    employe_id char(20) NOT NULL,
    name varchar(30) NULL,
    address varchar(100) NULL,
    phone char(20) NULL,
    email varchar(50) NULL,
    position int(1) NULL,
    status int(1) NULL DEFAULT 1,
    deleted_at datetime NULL,
    deleted_by varchar(30) NULL
);
ALTER TABLE mst_employes 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST,
ADD PRIMARY KEY (id, employe_id);


-- deployment: Creating dp_vcr_provider_prefix...
CREATE TABLE dp_vcr_provider_prefix (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(50) NULL,
    updated_at datetime NULL,
    updated_by varchar(50) NULL,
    provider_id int(12) NOT NULL,
    prefix char(4) NOT NULL,
    status int(1) NULL DEFAULT 0,
    deleted_at datetime NULL,
    deleted_by varchar(50) NULL
);
ALTER TABLE dp_vcr_provider_prefix 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST,
ADD PRIMARY KEY (id, provider_id, prefix);


-- deployment: Creating dp_vcr_provider...
CREATE TABLE dp_vcr_provider (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(50) NULL,
    updated_at datetime NULL,
    updated_by varchar(50) NULL,
    provider_name varchar(50) NULL,
    status int(1) NULL DEFAULT 0,
    deleted_at datetime NULL,
    deleted_by varchar(50) NULL
);
ALTER TABLE dp_vcr_provider 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST,
ADD PRIMARY KEY (id);


-- deployment: Creating dp_vcr_product...
CREATE TABLE dp_vcr_product (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(50) NULL,
    updated_at datetime NULL,
    updated_by varchar(50) NULL,
    provider_id int(12) NOT NULL,
    voucher_id char(7) NOT NULL,
    voucher_name varchar(50) NULL,
    price bigint(12) NULL,
    sale_price bigint(12) NULL DEFAULT 0,
    product_type char(3) NULL,
    status int(1) NULL DEFAULT 0,
    deleted_at datetime NULL,
    deleted_by varchar(50) NULL
);
ALTER TABLE dp_vcr_product 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST,
ADD PRIMARY KEY (id, provider_id, voucher_id);


-- deployment: Creating v_vcr_product...
CREATE VIEW v_vcr_product AS select `dp_vcr_product`.`id` AS `product_id`,`dp_vcr_provider`.`id` AS `provider_id`,`dp_vcr_provider`.`provider_name` AS `provider_name`,`dp_vcr_product`.`voucher_id` AS `voucher_id`,`dp_vcr_product`.`voucher_name` AS `voucher_name`,`dp_vcr_product`.`sale_price` AS `sale_price` from (`dp_vcr_product` left join `dp_vcr_provider` on((`dp_vcr_provider`.`id` = `dp_vcr_product`.`provider_id`))) order by `dp_vcr_product`.`voucher_name`;


-- deployment: Creating v_vcr_transaction...
CREATE VIEW v_vcr_transaction AS select `trx_vcr_sales`.`id` AS `id`,`trx_vcr_sales`.`transaction_date` AS `transaction_date`,`trx_vcr_sales`.`user_id` AS `user_id`,`trx_vcr_sales`.`transaction_id` AS `transaction_id`,`trx_vcr_sales`.`dest_number` AS `dest_number`,`trx_vcr_sales`.`voucher_id` AS `voucher_id`,`trx_vcr_sales`.`nominal` AS `nominal`,`trx_vcr_sales`.`harga` AS `harga`,`trx_vcr_sales`.`harga_jual` AS `harga_jual`,`trx_vcr_sales`.`refnumber` AS `refnumber`,`trx_vcr_sales`.`serial_number` AS `serial_number`,`trx_vcr_sales`.`info` AS `info`,`trx_vcr_sales`.`no_faktur` AS `no_faktur`,`trx_vcr_sales`.`paid_date` AS `paid_date`,`trx_vcr_sales`.`flag` AS `flag`,`vp`.`voucher_name` AS `voucher_name`,`vp`.`provider_name` AS `provider_name` from (`trx_vcr_sales` left join `v_vcr_product` `vp` on((`trx_vcr_sales`.`voucher_id` = `vp`.`voucher_id`))) where (`trx_vcr_sales`.`flag` > 0) order by `trx_vcr_sales`.`transaction_date`,`trx_vcr_sales`.`paid_date` desc;


-- deployment: Creating v_vcr_summary_monthly...
CREATE VIEW v_vcr_summary_monthly AS select date_format(`v_vcr_transaction`.`paid_date`,'%Y-%m') AS `transaction_date`,count(`v_vcr_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_vcr_transaction`.`harga_jual`) AS `total_amount` from `v_vcr_transaction` where (`v_vcr_transaction`.`flag` = 1) group by date_format(`v_vcr_transaction`.`paid_date`,'%Y-%m') order by `v_vcr_transaction`.`paid_date` desc;


-- deployment: Creating v_vcr_summary_daily...
CREATE VIEW v_vcr_summary_daily AS select date_format(`v_vcr_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,count(`v_vcr_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_vcr_transaction`.`harga_jual`) AS `total_amount` from `v_vcr_transaction` where (`v_vcr_transaction`.`flag` = 1) group by date_format(`v_vcr_transaction`.`paid_date`,'%Y-%m-%d') order by `v_vcr_transaction`.`paid_date` desc;


-- deployment: Creating v_vcr_daily_report...
CREATE VIEW v_vcr_daily_report AS select date_format(`v_vcr_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,`v_vcr_transaction`.`user_id` AS `user_id`,`v_vcr_transaction`.`transaction_id` AS `transaction_id`,`v_vcr_transaction`.`dest_number` AS `dest_number`,`v_vcr_transaction`.`voucher_id` AS `voucher_id`,`v_vcr_transaction`.`nominal` AS `nominal`,`v_vcr_transaction`.`harga_jual` AS `harga_jual`,`v_vcr_transaction`.`refnumber` AS `refnumber`,`v_vcr_transaction`.`serial_number` AS `serial_number`,`v_vcr_transaction`.`voucher_name` AS `voucher_name`,`v_vcr_transaction`.`provider_name` AS `provider_name` from `v_vcr_transaction` where (`v_vcr_transaction`.`flag` = 1) order by `v_vcr_transaction`.`paid_date`;


-- deployment: Creating v_vcr_monthly_report...
CREATE VIEW v_vcr_monthly_report AS select date_format(`v_vcr_daily_report`.`transaction_date`,'%Y-%m') AS `bulan`,`v_vcr_daily_report`.`transaction_date` AS `transaction_date`,count(`v_vcr_daily_report`.`transaction_id`) AS `jml_transaksi`,sum(`v_vcr_daily_report`.`harga_jual`) AS `jml_amount` from `v_vcr_daily_report` group by `v_vcr_daily_report`.`transaction_date` order by `v_vcr_daily_report`.`transaction_date`;


-- deployment: Creating dp_pre_demon...
CREATE TABLE dp_pre_demon (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(50) NULL,
    updated_at datetime NULL,
    updated_by varchar(50) NULL,
    denom bigint(12) NOT NULL,
    description varchar(50) NULL,
    price_sale bigint(12) NULL,
    status int(1) NULL DEFAULT 0,
    deleted_at datetime NULL,
    deleted_by varchar(50) NULL
);
ALTER TABLE dp_pre_demon 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST, 
ADD PRIMARY KEY (id, denom);


-- deployment: Creating dp_pam_biller...
CREATE TABLE dp_pam_biller (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(50) NULL,
    updated_at datetime NULL,
    updated_by varchar(50) NULL,
    biller varchar(30) NOT NULL,
    biller_name varchar(40) NULL,
    distric varchar(40) NULL,
    status int(1) NULL DEFAULT 0,
    deleted_at datetime NULL,
    deleted_by varchar(50) NULL
);
ALTER TABLE dp_pam_biller 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST, 
ADD PRIMARY KEY (id, biller);


-- deployment: Creating dp_mp_biller...
CREATE TABLE dp_mp_biller (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(50) NULL,
    updated_at datetime NULL,
    updated_by varchar(50) NULL,
    biller varchar(10) NULL,
    biller_name varchar(30) NULL,
    input_1_label varchar(20) NULL,
    input_1_type text NULL,
    input_2_label varchar(20) NULL,
    input_2_type text NULL,
    input_3_label varchar(20) NULL,
    input_3_type text NULL,
    details varchar(255) NULL,
    status int(1) NULL DEFAULT 0,
    deleted_at datetime NULL,
    deleted_by varchar(50) NULL
);
ALTER TABLE dp_mp_biller 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST, 
ADD PRIMARY KEY (id);


-- deployment: Creating v_mp_transaction...
CREATE VIEW v_mp_transaction AS select `trx_mp_sales`.`id` AS `id`,`trx_mp_sales`.`transaction_date` AS `transaction_date`,`trx_mp_sales`.`user_id` AS `user_id`,`trx_mp_sales`.`transaction_id` AS `transaction_id`,`trx_mp_sales`.`input_id_1` AS `input_id_1`,`trx_mp_sales`.`input_id_2` AS `input_id_2`,`trx_mp_sales`.`input_id_3` AS `input_id_3`,`trx_mp_sales`.`total_bill_amount` AS `total_bill_amount`,`trx_mp_sales`.`admin_charge` AS `admin_charge`,`trx_mp_sales`.`bill_amount` AS `bill_amount`,`trx_mp_sales`.`transaction_data` AS `transaction_data`,`trx_mp_sales`.`refnumber` AS `refnumber`,`trx_mp_sales`.`info` AS `info`,`trx_mp_sales`.`biller` AS `biller`,`trx_mp_sales`.`no_faktur` AS `no_faktur`,`trx_mp_sales`.`paid_date` AS `paid_date`,`trx_mp_sales`.`flag` AS `flag`,`dp_mp_biller`.`details` AS `details`,`dp_mp_biller`.`input_1_label` AS `input_1_label`,`dp_mp_biller`.`input_2_label` AS `input_2_label`,`dp_mp_biller`.`input_3_label` AS `input_3_label` from (`trx_mp_sales` left join `dp_mp_biller` on((`dp_mp_biller`.`biller` = `trx_mp_sales`.`biller`))) where (`trx_mp_sales`.`flag` > 0) order by `trx_mp_sales`.`transaction_date`,`trx_mp_sales`.`paid_date` desc;


-- deployment: Creating v_mp_summary_monthly...
CREATE VIEW v_mp_summary_monthly AS select date_format(`v_mp_transaction`.`paid_date`,'%Y-%m') AS `transaction_date`,`v_mp_transaction`.`biller` AS `biller`,count(`v_mp_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_mp_transaction`.`total_bill_amount`) AS `total_amount` from `v_mp_transaction` where (`v_mp_transaction`.`flag` = 1) group by date_format(`v_mp_transaction`.`paid_date`,'%Y-%m'),`v_mp_transaction`.`biller` order by `v_mp_transaction`.`paid_date`,`v_mp_transaction`.`biller`;


-- deployment: Creating v_all_summary_monthly...
CREATE VIEW v_all_summary_monthly AS select `v_mp_summary_monthly`.`biller` AS `module`,`v_mp_summary_monthly`.`transaction_date` AS `transaction_date`,`v_mp_summary_monthly`.`total_transaction` AS `total_transaction`,`v_mp_summary_monthly`.`total_amount` AS `total_amount` from `v_mp_summary_monthly` union select 'PDAM' AS `module`,`v_pam_summary_monthly`.`transaction_date` AS `transaction_date`,`v_pam_summary_monthly`.`total_transaction` AS `total_transaction`,`v_pam_summary_monthly`.`total_amount` AS `total_amount` from `v_pam_summary_monthly` union select 'PREPAID' AS `module`,`v_pre_summary_monthly`.`transaction_date` AS `transaction_date`,`v_pre_summary_monthly`.`total_transaction` AS `total_transaction`,`v_pre_summary_monthly`.`total_amount` AS `total_amount` from `v_pre_summary_monthly` union select 'POSPAID' AS `module`,`v_pos_summary_monthly`.`transaction_date` AS `transaction_date`,`v_pos_summary_monthly`.`total_transaction` AS `total_transaction`,`v_pos_summary_monthly`.`total_amount` AS `total_amount` from `v_pos_summary_monthly` union select 'VOUCHER' AS `module`,`v_vcr_summary_monthly`.`transaction_date` AS `transaction_date`,`v_vcr_summary_monthly`.`total_transaction` AS `total_transaction`,`v_vcr_summary_monthly`.`total_amount` AS `total_amount` from `v_vcr_summary_monthly`;


-- deployment: Creating v_dashboard_summary_monthly...
CREATE VIEW v_dashboard_summary_monthly AS select `v_all_summary_monthly`.`transaction_date` AS `transaction_date`,sum(`v_all_summary_monthly`.`total_transaction`) AS `total_transaction`,sum(`v_all_summary_monthly`.`total_amount`) AS `total_amount` from `v_all_summary_monthly` group by `v_all_summary_monthly`.`transaction_date` desc;


-- deployment: Creating v_mp_summary_daily...
CREATE VIEW v_mp_summary_daily AS select `v_mp_transaction`.`biller` AS `biller`,date_format(`v_mp_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,count(`v_mp_transaction`.`transaction_id`) AS `total_transaction`,sum(`v_mp_transaction`.`total_bill_amount`) AS `total_amount` from `v_mp_transaction` where (`v_mp_transaction`.`flag` = 1) group by date_format(`v_mp_transaction`.`paid_date`,'%Y-%m-%d'),`v_mp_transaction`.`biller` order by `v_mp_transaction`.`biller`,`v_mp_transaction`.`paid_date` desc;


-- deployment: Creating v_all_summary_daily...
CREATE VIEW v_all_summary_daily AS select `v_mp_summary_daily`.`biller` AS `module`,`v_mp_summary_daily`.`transaction_date` AS `transaction_date`,`v_mp_summary_daily`.`total_transaction` AS `total_transaction`,`v_mp_summary_daily`.`total_amount` AS `total_amount` from `v_mp_summary_daily` union select 'PDAM' AS `module`,`v_pam_summary_daily`.`transaction_date` AS `transaction_date`,`v_pam_summary_daily`.`total_transaction` AS `total_transaction`,`v_pam_summary_daily`.`total_amount` AS `total_amount` from `v_pam_summary_daily` union select 'PREPAID' AS `module`,`v_pre_summary_daily`.`transaction_date` AS `transaction_date`,`v_pre_summary_daily`.`total_transaction` AS `total_transaction`,`v_pre_summary_daily`.`total_amount` AS `total_amount` from `v_pre_summary_daily` union select 'POSPAID' AS `module`,`v_pos_summary_daily`.`transaction_date` AS `transaction_date`,`v_pos_summary_daily`.`total_transaction` AS `total_transaction`,`v_pos_summary_daily`.`total_amount` AS `total_amount` from `v_pos_summary_daily` union select 'VOUCHER' AS `module`,`v_vcr_summary_daily`.`transaction_date` AS `transaction_date`,`v_vcr_summary_daily`.`total_transaction` AS `total_transaction`,`v_vcr_summary_daily`.`total_amount` AS `total_amount` from `v_vcr_summary_daily`;


-- deployment: Creating v_dashboard_summary_daily...
CREATE VIEW v_dashboard_summary_daily AS select `v_all_summary_daily`.`transaction_date` AS `transaction_date`,sum(`v_all_summary_daily`.`total_transaction`) AS `total_transaction`,sum(`v_all_summary_daily`.`total_amount`) AS `total_amount` from `v_all_summary_daily` group by `v_all_summary_daily`.`transaction_date` order by `v_all_summary_daily`.`transaction_date` desc;


-- deployment: Creating v_mp_monthly_report...
CREATE VIEW v_mp_monthly_report AS select `v_mp_transaction`.`biller` AS `biller`,date_format(`v_mp_transaction`.`paid_date`,'%Y-%m') AS `bulan`,date_format(`v_mp_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,count(`v_mp_transaction`.`transaction_id`) AS `jml_transaksi`,sum(`v_mp_transaction`.`total_bill_amount`) AS `jml_amount` from `v_mp_transaction` where (`v_mp_transaction`.`flag` = 1) group by date_format(`v_mp_transaction`.`paid_date`,'%Y-%m-%d'),`v_mp_transaction`.`biller` order by `v_mp_transaction`.`biller`,date_format(`v_mp_transaction`.`paid_date`,'%Y-%m'),date_format(`v_mp_transaction`.`paid_date`,'%Y-%m-%d');


-- deployment: Creating v_mp_daily_report...
CREATE VIEW v_mp_daily_report AS select date_format(`v_mp_transaction`.`paid_date`,'%Y-%m-%d') AS `transaction_date`,`v_mp_transaction`.`biller` AS `biller`,`v_mp_transaction`.`user_id` AS `user_id`,`v_mp_transaction`.`transaction_id` AS `transaction_id`,`v_mp_transaction`.`refnumber` AS `refnumber`,`v_mp_transaction`.`input_id_1` AS `input_id_1`,`v_mp_transaction`.`input_id_2` AS `input_id_2`,`v_mp_transaction`.`input_id_3` AS `input_id_3`,`v_mp_transaction`.`total_bill_amount` AS `total_bill_amount`,`v_mp_transaction`.`admin_charge` AS `admin_charge`,`v_mp_transaction`.`bill_amount` AS `bill_amount`,`v_mp_transaction`.`transaction_data` AS `transaction_data`,`v_mp_transaction`.`info` AS `info`,`v_mp_transaction`.`details` AS `details`,`v_mp_transaction`.`input_1_label` AS `input_1_label`,`v_mp_transaction`.`input_2_label` AS `input_2_label`,`v_mp_transaction`.`input_3_label` AS `input_3_label` from `v_mp_transaction` where (`v_mp_transaction`.`flag` = 1) order by `v_mp_transaction`.`biller`,date_format(`v_mp_transaction`.`paid_date`,'%Y-%m-%d');


-- deployment: Creating ctl_down_acc...
CREATE TABLE ctl_down_acc (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(50) NULL,
    updated_at datetime NULL,
    updated_by varchar(50) NULL,
    down_mac varchar(255) NOT NULL,
    acc_pocky varchar(255) NOT NULL,
    enu_key varchar(255) NOT NULL,
    enp_val varchar(255) NOT NULL,
    guri_base varchar(255) NULL,
    curi_base varchar(255) NULL,
    status int(1) NULL DEFAULT 0,
    deleted_at datetime NULL,
    deleted_by varchar(50) NULL
);
ALTER TABLE ctl_down_acc 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST, 
ADD PRIMARY KEY (id, down_mac, acc_pocky, enu_key, enp_val);


-- deployment: Creating ap_user...
CREATE TABLE ap_user (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(30) NULL,
    updated_at datetime NULL,
    updated_by varchar(30) NULL,
    user_name text NOT NULL,
    password text NOT NULL,
    emp_id int(12) NOT NULL,
    status int(1) NULL DEFAULT 1
);
ALTER TABLE ap_user 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST, 
ADD PRIMARY KEY (id, emp_id);

-- deployment: Creating ap_margin_sales...
CREATE TABLE ap_margin_sales (
    id int(12) NOT NULL,
    created_at datetime NULL,
    created_by varchar(30) NULL,
    updated_at datetime NULL,
    updated_by varchar(30) NULL,
    type char(1) NOT NULL,
    value bigint(12) NOT NULL,
    round_type char(1) NOT NULL,
    margin_min bigint(12) NOT NULL DEFAULT 1,
    margin_max bigint(12) NOT NULL
);
ALTER TABLE ap_margin_sales 
CHANGE COLUMN id  id INT NOT NULL AUTO_INCREMENT FIRST, 
ADD PRIMARY KEY (id) ;

